# Generated by Django 5.2.1 on 2025-08-26 07:50

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('certification', 'Certification'), ('award', 'Award'), ('recognition', 'Recognition'), ('publication', 'Publication'), ('speaking', 'Speaking Engagement'), ('contribution', 'Open Source Contribution'), ('education', 'Education'), ('other', 'Other')], max_length=20)),
                ('organization', models.CharField(help_text='Issuing organization or institution', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('date_achieved', models.DateField()),
                ('certificate_url', models.URLField(blank=True, help_text='Link to certificate or verification')),
                ('credential_id', models.CharField(blank=True, help_text='Certificate or credential ID', max_length=100)),
                ('icon', models.CharField(blank=True, help_text='Emoji or icon class', max_length=50)),
                ('is_featured', models.BooleanField(default=True, help_text='Show on main page')),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order', '-date_achieved'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('programming', 'Programming Languages'), ('framework', 'Frameworks & Libraries'), ('database', 'Databases'), ('devops', 'DevOps & Cloud'), ('tools', 'Tools & Technologies'), ('ai_ml', 'AI & Machine Learning'), ('other', 'Other')], default='other', max_length=20)),
                ('proficiency', models.IntegerField(help_text='Proficiency level from 0 to 100', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('description', models.TextField(help_text='Brief description of your experience with this skill', max_length=500)),
                ('icon', models.CharField(blank=True, help_text='Emoji or icon class', max_length=50)),
                ('is_featured', models.BooleanField(default=True, help_text='Show this skill on the main page')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of display (lower numbers first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('subtitle', models.CharField(blank=True, max_length=300)),
                ('description', models.TextField()),
                ('short_description', models.CharField(help_text='Brief description for cards', max_length=500)),
                ('demo_url', models.URLField(blank=True, help_text='Live demo URL')),
                ('github_url', models.URLField(blank=True, help_text='GitHub repository URL')),
                ('case_study_url', models.URLField(blank=True, help_text='Detailed case study URL')),
                ('image', models.ImageField(blank=True, help_text='Project screenshot or logo', upload_to='projects/')),
                ('video_url', models.URLField(blank=True, help_text='Demo video URL (YouTube, Vimeo, etc.)')),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('in_progress', 'In Progress'), ('planned', 'Planned'), ('archived', 'Archived')], default='completed', max_length=20)),
                ('tech_tags', models.CharField(blank=True, help_text='Comma-separated tech tags (fallback if not using Skill model)', max_length=500)),
                ('key_features', models.TextField(blank=True, help_text='Key features, one per line')),
                ('challenges', models.TextField(blank=True, help_text='Technical challenges overcome')),
                ('learnings', models.TextField(blank=True, help_text='What you learned from this project')),
                ('is_featured', models.BooleanField(default=True, help_text='Show this project on the main page')),
                ('is_personal', models.BooleanField(default=True, help_text='Personal project vs client work')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of display (lower numbers first)')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('technologies', models.ManyToManyField(blank=True, help_text='Technologies used in this project', to='app.skill')),
            ],
            options={
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=200)),
                ('position', models.CharField(max_length=200)),
                ('employment_type', models.CharField(choices=[('full_time', 'Full-time'), ('part_time', 'Part-time'), ('contract', 'Contract'), ('freelance', 'Freelance'), ('internship', 'Internship'), ('volunteer', 'Volunteer')], default='full_time', max_length=20)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, help_text='Leave blank if current position', null=True)),
                ('company_url', models.URLField(blank=True)),
                ('company_logo', models.ImageField(blank=True, upload_to='companies/')),
                ('is_featured', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('technologies_used', models.ManyToManyField(blank=True, to='app.skill')),
            ],
            options={
                'ordering': ['order', '-start_date'],
            },
        ),
    ]
